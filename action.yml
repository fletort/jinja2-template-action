name: 'Jinja2 Engine Repo'
description: 'Use the Jinja2 templating engine on multiple files'
author: 'fletort'
branding:
  icon: 'sliders'
  color: 'red'
inputs:
  variables:
    description:
      'Key, value pairs in .env file format (key=value)'
    required: false
    default: ''
  keep_template:
    description:
      'Put to `true` to keep original template file.'
    default: false
  data_file:
    description:
      'Source file contening inputs variable for the jinja template.'
    default: ''
  data_format:
    description:
      'Format of the `data_file`. Can be `env`, `ini`, `yaml`, `json` or `automatic` (for automatic detection). The automatic detction is based on the extension then on the content.'
    default: automatic
runs:
  using: 'composite'
  steps:
    - name: "Manage Dynamic Template"
      shell: bash
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
        JOB_CONTEXT: ${{ toJson(job) }}
        RUNNER_CONTEXT: ${{ toJson(runner) }}
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: |
        # Need to export multiline variables input and context to pass it to python script
        mkdir ${{ runner.temp }}/build_logs
        echo "${{ inputs.variables }}" > ${{ runner.temp }}/build_logs/inputs_variables.env
        echo "$GITHUB_CONTEXT" > ${{ runner.temp }}/build_logs/github.json
        echo "$JOB_CONTEXT" > ${{ runner.temp }}/build_logs/job.json
        echo "$RUNNER_CONTEXT" > ${{ runner.temp }}/build_logs/runner.json
        echo "$STRATEGY_CONTEXT" > ${{ runner.temp }}/build_logs/strategy.json
        echo "$MATRIX_CONTEXT" > ${{ runner.temp }}/build_logs/matrix.json
        pip install -r ${{github.action_path}}/requirements.txt
        keep_template=""
        if [[ "${{inputs.keep_template}}" == "true" ]]; then keep_template="--keep_template"; fi
        data_file=""
        data_format=""
        if [[ ! -z "${{inputs.data_file}}" ]];then 
          data_file="--data_file=${{inputs.data_file}}"
          if [[ "${{inputs.data_format}}" != "automatic" ]]; then
            data_format="--data_format=${{inputs.data_format}}"
          fi
        fi
        python3 ${{github.action_path}}/entrypoint.py ${keep_template} ${data_file} ${data_format} \
          --var_file ${{ runner.temp }}/build_logs/inputs_variables.env \
          --context ${{ runner.temp }}/build_logs/github.json \
          --context ${{ runner.temp }}/build_logs/job.json \
          --context ${{ runner.temp }}/build_logs/runner.json \
          --context ${{ runner.temp }}/build_logs/strategy.json \
          --context ${{ runner.temp }}/build_logs/matrix.json
